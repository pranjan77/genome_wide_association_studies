# -*- coding: utf-8 -*-
############################################################
#
# Autogenerated by the KBase type compiler -
# any changes made here will be overwritten
#
############################################################

from __future__ import print_function
# the following is a hack to get the baseclient to import whether we're in a
# package or not. This makes pep8 unhappy hence the annotations.
try:
    # baseclient and this client are in a package
    from .baseclient import BaseClient as _BaseClient  # @UnusedImport
except:
    # no they aren't
    from baseclient import BaseClient as _BaseClient  # @Reimport


class ftp_service(object):

    def __init__(
            self, url=None, timeout=30 * 60, user_id=None,
            password=None, token=None, ignore_authrc=False,
            trust_all_ssl_certificates=False,
            auth_svc='https://kbase.us/services/authorization/Sessions/Login',
            service_ver='release'):
        if url is None:
            url = 'https://kbase.us/services/service_wizard'
        self._service_ver = service_ver
        self._client = _BaseClient(
            url, timeout=timeout, user_id=user_id, password=password,
            token=token, ignore_authrc=ignore_authrc,
            trust_all_ssl_certificates=trust_all_ssl_certificates,
            auth_svc=auth_svc,
            lookup_url=True)

    def search_list_files(self, params, context=None):
        """
        :param params: instance of type "listFilesInputParams" -> structure:
           parameter "token" of String, parameter "type" of String, parameter
           "search_word" of String, parameter "username" of String
        :returns: instance of type "searchListFilesOutputPparams" ->
           structure: parameter "files" of list of type "fileInfo" ->
           structure: parameter "file_link" of String, parameter "file_name"
           of String, parameter "file_size" of Double, parameter "file_type"
           of String, parameter "isFolder" of String, parameter "date" of
           String, parameter "username" of String
        """
        return self._client.call_method(
            'ftp_service.search_list_files',
            [params], self._service_ver, context)

    def list_files(self, context=None):
        """
        :returns: instance of type "filepathList" -> list of String
        """
        return self._client.call_method(
            'ftp_service.list_files',
            [], self._service_ver, context)

    def status(self, context=None):
        return self._client.call_method('ftp_service.status',
                                        [], self._service_ver, context)
